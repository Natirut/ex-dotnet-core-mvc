#pragma checksum "D:\New folder\MvcMovie\Views\Page\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8685bcfc3a769e9b23e71f2ecf8d0d2882bb5b7e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Page_Index), @"mvc.1.0.view", @"/Views/Page/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\New folder\MvcMovie\Views\_ViewImports.cshtml"
using MvcMovie;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\New folder\MvcMovie\Views\_ViewImports.cshtml"
using MvcMovie.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8685bcfc3a769e9b23e71f2ecf8d0d2882bb5b7e", @"/Views/Page/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"686ad2e38abb871af45be971520cc6c3156da389", @"/Views/_ViewImports.cshtml")]
    public class Views_Page_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<MvcMovie.Models.Movie>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\New folder\MvcMovie\Views\Page\Index.cshtml"
  
  ViewData["Title"] = "Page Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(@"
<table id=""tabtable"" class=""table table-borderless"">
  <thead >
    <tr>
      <th>emp_code</th>
      <th>emp_name</th>
      <th>status</th>
    </tr>
  </thead>
  
</table>




<h2>This is a heading</h2>
<p id=""app"">This is a paragraph.</p>
<p id=""showcss"">NOWWW</p>
<i class=""bi bi-emoji-angry""></i>
<button id=""Btn1"" type=""button"" class=""btn btn-primary"">Primary</button>
<button id=""Btn2"" type=""button"" class=""btn btn-info"">append</button>
<button id=""Btn3"" type=""button"" class=""btn btn-warning"">css</button>

<input type=""text"" id=""emp_name"">



");
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n<style>\r\n  .bigfont {\r\n    font-size: 50px;\r\n  }\r\n</style>\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
<script>


  var val_name
  var Data_Person
  $(""#Btn1"").click(function (e) {
    getval2()
  });

  $(""#Btn2"").click(function (e) {
    $(""#app"").append(""Appended text"");
  });

  $(""#Btn3"").click(function (e) {
    $(""#showcss"").addClass(""bigfont"");

  });

");
                WriteLiteral(@"
    function getval() {
      val_name = $(""#emp_name"").val()
      if (val_name === ""now"") {
        alert(""HI"")
      } else {
        alert(""NO"")
      }
    }

  function getval2() {
    val_name = $(""#emp_name"").val()
    $.ajax({
      type: ""POST"",
      url: """);
#nullable restore
#line 128 "D:\New folder\MvcMovie\Views\Page\Index.cshtml"
       Write(Url.Action("CreateNew"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
      data: { body: ""XXXXX"" },
      success: function (response) {
        alert(response);
      }
    });
  }



function test2(){
  $('#tabtable').DataTable( {
      ajax:{
         type: ""GET"",
      url: ""http://cptsvs531:5000/apioverareadev/Home/Get_Person"",
      dataType: ""json"",
     dataSrc: function (res) {
    return res
}
      }
     
    ,
    columns: [
        { data: 'emp_code' },
        { data: 'emp_name' },
        { data: 'status' },
    ]
} );
}

$('#tab2').DataTable( );

  function test() {
    $.ajax({
      type: ""GET"",
      url: ""http://cptsvs531:5000/apioverareadev/Home/Get_Person"",
      dataType: ""json"",
      success: function (response) {

        Data_Person = response
        let showtable = """"
        Data_Person.forEach((item,index)=>{
          showtable += `
          <tr>
            <td>${index+1}</td>
            <td>${item.emp_code}</td>
            <td>${item.emp_name}</td>
            <td>${item.status}</td> 
    ");
                WriteLiteral("      </tr>\r\n          `;\r\n\r\n        })\r\n        $(\"#tab tbody\").html(showtable)\r\n      },\r\n      error: function (error) {\r\n        console.log(\'Error: \' + error);\r\n      }\r\n    });\r\n  }\r\n\r\n  test2()\r\n\r\n</script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<MvcMovie.Models.Movie>> Html { get; private set; }
    }
}
#pragma warning restore 1591
